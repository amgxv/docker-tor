name: Build image

on:
  push:
    branches: [ 'master' ]
  schedule:
    - cron: '30 15 * * */7'

env:
  REGISTRY: docker.io
  IMAGE_NAME: amgxv/tor

jobs:
  docker:
    strategy:
      matrix:
        arch:
          - amd64
          - arm64v8
          - arm32v7
        flavour:
          - stable
          - oldstable
          - latest

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure buildx and QEMU for cross-arch support
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Log in into the registry
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    # Build and push Docker image with Buildx
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./tor-${{ matrix.flavour }}.dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.arch }}-${{ matrix.flavour }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: "ARCH=${{ matrix.arch }}"

  docker-manifest:
    runs-on: ubuntu-latest
    needs: docker
    strategy:
      matrix:
        flavour:
          - stable
          - oldstable
          - latest

    steps:
      # Log in into the registry
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Publish manifests
        env:
          MANIFEST_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.flavour }}
        run: |
          docker manifest create ${{ env.MANIFEST_NAME }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:amd64-${{ matrix.flavour }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm64v8-${{ matrix.flavour }} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:arm32v7-${{ matrix.flavour }}
          docker manifest push -p ${{ env.MANIFEST_NAME }}
